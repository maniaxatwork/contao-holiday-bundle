<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'nelmio_security.csp_reporter_controller' shared service.

include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'nelmio'.\DIRECTORY_SEPARATOR.'security-bundle'.\DIRECTORY_SEPARATOR.'Controller'.\DIRECTORY_SEPARATOR.'ContentSecurityPolicyController.php';
include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'nelmio'.\DIRECTORY_SEPARATOR.'security-bundle'.\DIRECTORY_SEPARATOR.'ContentSecurityPolicy'.\DIRECTORY_SEPARATOR.'Violation'.\DIRECTORY_SEPARATOR.'Log'.\DIRECTORY_SEPARATOR.'Logger.php';
include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'nelmio'.\DIRECTORY_SEPARATOR.'security-bundle'.\DIRECTORY_SEPARATOR.'ContentSecurityPolicy'.\DIRECTORY_SEPARATOR.'Violation'.\DIRECTORY_SEPARATOR.'Log'.\DIRECTORY_SEPARATOR.'LogFormatterInterface.php';
include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'nelmio'.\DIRECTORY_SEPARATOR.'security-bundle'.\DIRECTORY_SEPARATOR.'ContentSecurityPolicy'.\DIRECTORY_SEPARATOR.'Violation'.\DIRECTORY_SEPARATOR.'Log'.\DIRECTORY_SEPARATOR.'LogFormatter.php';
include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'nelmio'.\DIRECTORY_SEPARATOR.'security-bundle'.\DIRECTORY_SEPARATOR.'ContentSecurityPolicy'.\DIRECTORY_SEPARATOR.'Violation'.\DIRECTORY_SEPARATOR.'Filter'.\DIRECTORY_SEPARATOR.'Filter.php';
include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'nelmio'.\DIRECTORY_SEPARATOR.'security-bundle'.\DIRECTORY_SEPARATOR.'ContentSecurityPolicy'.\DIRECTORY_SEPARATOR.'Violation'.\DIRECTORY_SEPARATOR.'Filter'.\DIRECTORY_SEPARATOR.'NoiseDetectorInterface.php';
include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'nelmio'.\DIRECTORY_SEPARATOR.'security-bundle'.\DIRECTORY_SEPARATOR.'ContentSecurityPolicy'.\DIRECTORY_SEPARATOR.'Violation'.\DIRECTORY_SEPARATOR.'Filter'.\DIRECTORY_SEPARATOR.'DomainsNoiseDetector.php';
include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'nelmio'.\DIRECTORY_SEPARATOR.'security-bundle'.\DIRECTORY_SEPARATOR.'ContentSecurityPolicy'.\DIRECTORY_SEPARATOR.'Violation'.\DIRECTORY_SEPARATOR.'Filter'.\DIRECTORY_SEPARATOR.'DomainsRegexNoiseDetector.php';
include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'nelmio'.\DIRECTORY_SEPARATOR.'security-bundle'.\DIRECTORY_SEPARATOR.'ContentSecurityPolicy'.\DIRECTORY_SEPARATOR.'Violation'.\DIRECTORY_SEPARATOR.'Filter'.\DIRECTORY_SEPARATOR.'SchemesNoiseDetector.php';
include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'nelmio'.\DIRECTORY_SEPARATOR.'security-bundle'.\DIRECTORY_SEPARATOR.'ContentSecurityPolicy'.\DIRECTORY_SEPARATOR.'Violation'.\DIRECTORY_SEPARATOR.'Filter'.\DIRECTORY_SEPARATOR.'InjectedScriptsNoiseDetector.php';
include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'nelmio'.\DIRECTORY_SEPARATOR.'security-bundle'.\DIRECTORY_SEPARATOR.'ContentSecurityPolicy'.\DIRECTORY_SEPARATOR.'Violation'.\DIRECTORY_SEPARATOR.'Filter'.\DIRECTORY_SEPARATOR.'BrowserBugsNoiseDetector.php';

$a = new \Nelmio\SecurityBundle\ContentSecurityPolicy\Violation\Filter\Filter();
$a->addNoiseDetector(new \Nelmio\SecurityBundle\ContentSecurityPolicy\Violation\Filter\DomainsNoiseDetector());
$a->addNoiseDetector(new \Nelmio\SecurityBundle\ContentSecurityPolicy\Violation\Filter\DomainsRegexNoiseDetector());
$a->addNoiseDetector(new \Nelmio\SecurityBundle\ContentSecurityPolicy\Violation\Filter\SchemesNoiseDetector());
$a->addNoiseDetector(new \Nelmio\SecurityBundle\ContentSecurityPolicy\Violation\Filter\InjectedScriptsNoiseDetector());
$a->addNoiseDetector(new \Nelmio\SecurityBundle\ContentSecurityPolicy\Violation\Filter\BrowserBugsNoiseDetector(($this->privates['nelmio_security.ua_parser.ua_php.provider'] ?? $this->load('getNelmioSecurity_UaParser_UaPhp_ProviderService.php'))));

return $this->services['nelmio_security.csp_reporter_controller'] = new \Nelmio\SecurityBundle\Controller\ContentSecurityPolicyController(new \Nelmio\SecurityBundle\ContentSecurityPolicy\Violation\Log\Logger(($this->privates['monolog.logger'] ?? $this->getMonolog_LoggerService()), new \Nelmio\SecurityBundle\ContentSecurityPolicy\Violation\Log\LogFormatter(), 'notice'), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), $a);
