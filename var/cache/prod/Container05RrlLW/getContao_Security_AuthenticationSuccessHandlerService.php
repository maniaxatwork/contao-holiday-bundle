<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'contao.security.authentication_success_handler' shared service.

include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-http'.\DIRECTORY_SEPARATOR.'Authentication'.\DIRECTORY_SEPARATOR.'AuthenticationSuccessHandlerInterface.php';
include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'contao'.\DIRECTORY_SEPARATOR.'core-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Security'.\DIRECTORY_SEPARATOR.'Authentication'.\DIRECTORY_SEPARATOR.'AuthenticationSuccessHandler.php';

return $this->privates['contao.security.authentication_success_handler'] = new \Contao\CoreBundle\Security\Authentication\AuthenticationSuccessHandler(($this->services['contao.framework'] ?? $this->getContao_FrameworkService()), ($this->services['contao.security.two_factor.trusted_device_manager'] ?? $this->load('getContao_Security_TwoFactor_TrustedDeviceManagerService.php')), ($this->services['security.firewall.map'] ?? $this->getSecurity_Firewall_MapService()), ($this->privates['monolog.logger'] ?? $this->getMonolog_LoggerService()));
